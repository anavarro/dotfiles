" Author: Alvaro Navarro <alnacle@gmail.com>

" Load all bundles from 'bundles' directory
filetype off 
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

" Map Leader for all shortkeys
let mapleader = ","

" Vim behave in a more useful way
set nocompatible

" Four spaces ident style
set softtabstop=4
set shiftwidth=4
set tabstop=4
set expandtab

" Override the default value of 5 for the number of lines
" to be evaluated from other file
set modelines=0

" Formatting uses the indentation of the first line
set autoindent
set textwidth=0

" Avoid annoying auto-generated backups files
set nobackup

" Use 'g' flag by default with :s/foo/bar/.
set gdefault

" Showmatch will always wait half a second. When not included, a showmatch
" will wait half a second or until a character is typed
set cpoptions-=m

" Lower priority when multiple files match a wildcard
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

" Tenths of a second to show the matching paren
set showmatch

" Autocomplete commands
set wildmode=list:longest,full

" Automatically set the indent of a new line (local to buffer)
set ai 
" Smartindent (local to buffer)
set si 

" Scrollbars
set sidescrolloff=2
set numberwidth=4

" Colors stuff
set t_Co=256 
" syntax highlighting
syntax on 

" Cursor highlights
set cursorline

" Status line
set ruler
set showcmd
set showmode
set laststatus=2
set statusline=%<%f\ %=\:\b%n%y%m%r%w\ %l,%c%V\ %P

" Multiple windows, when created, are equal in size
set equalalways 
set splitbelow splitright

" Vertical and horizontal split then hop to a new buffer
" Search stuff
set hlsearch    " highlight search
set incsearch   " Incremental search, search as you type
set ignorecase  " Ignore case when searching 
set smartcase   " Ignore case when searching lowercase

" Lines longer than the width of the window will wrap and
" displaying continues on the next line
set nowrap
" Wrap at word
set linebreak  

" Sets what is saved when you save a session
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize

" Invisible characters
set listchars=trail:.,tab:>-,eol:$
set nolist

" Splits local buffer
:noremap <Leader>v :vsp^M^W^W<cr>
:noremap <Leader>h :split^M^W^W<cr>
" Toggle invisible chars
:noremap <Leader>i :set list!<CR> 

" Each item allows a way to backspace over something
set backspace=indent,eol,start

" Show line numbers
set number 

" Includes <> as pair
set matchpairs+=<:>

" Turn off bell, this could be more annoying, but I'm not sure how
set vb t_vb= 

" Turn off folding 
set nofoldenable 

" Make cursor move by visual lines instead of file lines (when wrapping)
map <up> gk
map k gk
imap <up> <C-o>gk
map <down> gj
map j gj
imap <down> <C-o>gj
map E ge

" Dealing with buffers
map <Leader>qq :previous<CR>
map <Leader>ww :next<CR>
map <Leader>p <C-^> " Go to previous file

" Moving next and previous error
map <Leader>e :cp<CR>
map <Leader>r :cn<CR>
map <Leader>l :cl<CR>

" Map 'enter' to open the current file under cursor
map <CR> gf

" Faster way to close vim
map <Leader>z :q!<CR>
map <Leader>x :wq<CR>

"
" PLUGINS
"
" To show current filetype use: set filetype
filetype plugin on
filetype plugin indent on

" NERDTree
:noremap <Leader>n :NERDTreeToggle<CR>
let NERDTreeHijackNetrw=1       " User instead of Netrw when doing an edit /foobar
let NERDTreeMouseMode=1         " Single click for everything
let NERDCreateDefaultMappings=0 " I turn this off to make it simple

" fuzzyfinder
map <Leader>b :FufBuffer<CR>

let g:AutoComplPop_IgnoreCaseOption = 0
let g:AutoComplPop_BehaviorKeywordLength = 2

set tags+=~/.vim/tags/stl

" Omni Completion
autocmd FileType html :set omnifunc=htmlcomplete#CompleteTags
autocmd FileType python set omnifunc=pythoncomplete#Complete
autocmd FileType javascript set omnifunc=javascriptcomplete#CompleteJS
autocmd FileType css set omnifunc=csscomplete#CompleteCSS
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags
autocmd FileType php set omnifunc=phpcomplete#CompletePHP
autocmd FileType c set omnifunc=ccomplete#Complete

" OmniCppComplete
let OmniCpp_NamespaceSearch = 1
let OmniCpp_GlobalScopeSearch = 1
let OmniCpp_ShowAccess = 1
let OmniCpp_MayCompleteDot = 0
let OmniCpp_MayCompleteArrow = 0
let OmniCpp_MayCompleteScope = 1
let OmniCpp_DefaultNamespaces = ["std", "_GLIBCXX_STD"]

" automatically open and close the popup menu / preview window
au CursorMovedI,InsertLeave * if pumvisible() == 0|silent! pclose|endif
au BufNewFile,BufRead,BufEnter *.cpp,*.hpp set omnifunc=omni#cpp#complete#Main
set completeopt=menuone,menu,longest,preview

" automatically insert "#!/bin/sh" line for *.sh files
au BufEnter *.sh if getline(1) == "" | :call setline(1, "#!/bin/sh")

" automatically give executable permissions if filename is *.sh
au BufWritePost *.sh :!chmod a+x <afile>

