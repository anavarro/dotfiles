" Author: Alvaro Navarro <alnacle@gmail.com>

" Load all bundles from directory
filetype off 
call pathogen#helptags()
call pathogen#runtime_append_all_bundles()

" disable vi compatibility
set nocompatible
set nobackup

" Master key
let mapleader = ","

" Use 4 spaces ident style
set tabstop=4
set softtabstop=4
set shiftwidth=4
set expandtab

" Prevent modelines in files from being evaluated (avoids a potential
" security problem wherein a malicious user could write a hazardous
" modeline into a file) (override default value of 5)
set modelines=0

" Now we set some defaults for the editor
" always set autoindenting on
set autoindent

" AN 16.08.2012
" wrap lines at 120 chars. (previous value = 0)
set textwidth=120

" Use 'g' flag by default with :s/foo/bar/.
set gdefault

" a showmatch will wait half a second or until a character is typed
set cpoptions-=m

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

" Highlights the matching braces|brackets|parens when the cursor is on a bracket.
set showmatch

" Autocomplete commands
set wildmode=list:longest,full

" Indenting
set ai " Automatically set the indent of a new line (local to buffer)
set si " smartindent (local to buffer)

" AN 16.08.2012
set smartindent

" Searching
set hlsearch   " highlight search
set incsearch  " Incremental search, search as you type
set ignorecase " Ignore case when searching 
set smartcase  " Ignore case when searching lowercase

" GUI Options
syntax on             " syntax highlighting
set t_Co=256          " 256 colors
set sidescrolloff=2   " scrollbars
set numberwidth=4     " whanges how wide the column containing line numbers will be.
set equalalways       " multiple windows, when created, are equal in size
set splitbelow        " make the new window appear below the current window
set splitright        " make the new window appear on the right   
set cursorline        " cursor highlights
set ruler             " show ruler
set number            " Show line numbers
set showcmd           " show current command on ruler
set showmode          " show current mode on ruler
set laststatus=2      " always show the status line
set vb t_vb=          " Turn off bell
set statusline=%<%f\ %=\:\b%n%y%m%r%w\ %l,%c%V\ %P

" Line Wrapping ***************************************************************
set nowrap
set linebreak  " Wrap at word

" Sessions ********************************************************************
" Sets what is saved when you save a session
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize

" Invisible characters *********************************************************
set listchars=trail:.,tab:>-,eol:$
set nolist

" Misc settings ***************************************************************
set backspace=indent,eol,start
set matchpairs+=<:>
set nofoldenable " Turn off folding 

" Navigation ******************************************************************
" Make cursor move by visual lines instead of file lines (when wrapping)
map <up> gk
map k gk
imap <up> <C-o>gk
map <down> gj
map j gj
imap <down> <C-o>gj
map E ge

" Map 'enter' to open the current file under cursor
map <CR> gf

" To show current filetype use: set filetype
filetype on
filetype plugin on
filetype plugin indent on

" Omni Completion *************************************************************
autocmd FileType html :set omnifunc=htmlcomplete#CompleteTags
autocmd FileType xml set omnifunc=xmlcomplete#CompleteTags

" NERDTree ********************************************************************
:noremap <Leader>n :NERDTreeToggle<CR>

" let NERDTreeHijackNetrw=1       " User instead of Netrw when doing an edit /foobar
" let NERDTreeMouseMode=1         " Single click for everything
" let NERDCreateDefaultMappings=0 " I turn this off to make it simple

" fuzzyfinder ********************************************************
" I'm using CommandT for main searching, but it doesn't do buffers, so I'm
" using FuzzyFinder for that
map <Leader>b :FufFile<CR>
let g:fuzzy_ignore = '.o;.obj;.bak;.exe;.pyc;.pyo;.DS_Store;.db'

" autocomplpop ***************************************************************
" complete option
"set complete=.,w,b,u,t,k
"let g:AutoComplPop_CompleteOption = '.,w,b,u,t,k'
"set complete=.
let g:AutoComplPop_IgnoreCaseOption = 0
let g:AutoComplPop_BehaviorKeywordLength = 2

" automatically give executable permissions if filename is *.sh
au BufWritePost *.sh :!chmod a+x <afile>

" automatically insert "#!/bin/sh" line for *.sh files
au BufEnter *.sh if getline(1) == "" | :call setline(1, "#!/bin/sh")

" https://github.com/fholgado/minibufexpl.vim
noremap <leader>e <esc>:1,300 bd!<cr>:q!<cr>
noremap <leader>b <esc>:BufExplorer<cr>
noremap <leader>q <esc>:q!<cr>
noremap <Leader>i :set list!<CR>
noremap <Leader>v :vsp^M^W^W<cr>
noremap <Leader>h ^W^W<cr>

" Moving next and previous result (erros/finds)
" map e :cp<CR>
map f :cn<CR>
" map <Leader>l :cl<CR>

noremap W :bn<cr>
noremap Q :bp<cr>
noremap D :bd!<cr>
noremap <C-f> <esc>:silent execute "grep! -R " . shellescape(expand("<cword>")) . " ."<cr>:copen<cr>
noremap E <esc><C-]><cr>

map <F2> :A<CR>
map <F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
imap <c-space> <c-x><c-o>
cmap w!! %!sudo tee > /dev/null %

colorscheme wombat
highlight Normal guibg=black guifg=white
set background=dark

if filereadable(expand("~/.vim/vimrc_cpp"))
  source ~/.vim/vimrc_cpp
endif

if filereadable(expand("~/.vim/vimrc_python"))
  source ~/.vim/vimrc_python
endif

if filereadable(expand("~/.vim/vimrc_local"))
  source ~/.vim/vimrc_local
endif

