" Author: Alvaro Navarro <alnacle@gmail.com>
" Date:   Juli 05th 2013

" Some Linux distributions set filetype in general vimrc config
filetype off
filetype plugin indent off

set rtp+=~/.vim/bundle/vundle/
set runtimepath+=$GOROOT/misc/vim
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'tpope/vim-fugitive'
Bundle 'anavarro/minibufexpl'
Bundle 'scrooloose/nerdtree'
Bundle 'scrooloose/nerdcommenter'
Bundle 'Shougo/neocomplcache.vim'
Bundle 'mattn/zencoding-vim'
Bundle 'jnwhiteh/vim-golang'
Bundle 'tomtom/checksyntax_vim'
Bundle 'plasticboy/vim-markdown'
" Bundle 'Raimondi/delimitMate'
Bundle 'majutsushi/tagbar'
Bundle 'xuhdev/SingleCompile'
Bundle 'terryma/vim-multiple-cursors'
Bundle 'L9'
Bundle 'FuzzyFinder'
Bundle 'a.vim'  
Bundle 'CSApprox'
Bundle 'OmniCppComplete'
Bundle 'taglist.vim'
Bundle 'ervandew/supertab'

Bundle 'pythoncomplete'
Bundle 'kevinw/pyflakes-vim'

filetype plugin indent on

" Master key
let mapleader = ","

" disable vi compatibility
set nocompatible
set nobackup

" Sets the number of lines vim checks for initializations
" Set to 0 in order to avoid security problems
set modelines=0

" General Editing Stuff
set tabstop=4       " Use 4 spaces ident style
set softtabstop=4   " How many columns uses when hitting Tab
set shiftwidth=4    " Reindenting to 4 spaces
set expandtab       " Produce the appropriate number of spaces
set autoindent      " Automatically set the indent of a new line
set smartindent     " Does the right thing (mostly)
set nowrap          " Don't wrap text
set linebreak       " Wrap at word
set textwidth=120   " Wrap lines at 120 chars

" Use 'g' flag by default with :s/foo/bar/.
set gdefault

" a showmatch will wait half a second or until a character is typed
set cpoptions-=m

" Suffixes that get lower priority when doing tab completion for filenames.
" These are files we are not likely to want to edit or read.
set suffixes=.bak,~,.swp,.o,.info,.aux,.log,.dvi,.bbl,.blg,.brf,.cb,.ind,.idx,.ilg,.inx,.out,.toc

" Autocomplete commands
set wildmenu
set wildmode=list:longest,full
set whichwrap=b,s,h,l,<,>,[,]

" Searching
set hlsearch          " highlight search
set incsearch         " Incremental search, search as you type
set ignorecase        " Ignore case when searching 
set smartcase         " Ignore case when searching lowercase
set showmatch         " Highlights the matching braces|brackets|parens when the cursor is on a bracket.

" Look & Feel Options
syntax on             " Syntax highlighting
set t_Co=256          " 256 colors
set sidescrolloff=2   " scrollbars
set numberwidth=4     " whanges how wide the column containing line numbers will be.
set equalalways       " multiple windows, when created, are equal in size
set splitbelow        " make the new window appear below the current window
set splitright        " make the new window appear on the right   
set cursorline        " cursor highlights
set ruler             " show ruler
set number            " Show line numbers
set showcmd           " show current command on ruler
set showmode          " show current mode on ruler
set laststatus=2      " always show the status line
set vb t_vb=          " Turn off bell
set showmode 
set showcmd

highlight clear SignColumn
set rulerformat=%30(%=\:b%n%y%m%r%w\ %l,%c%V\ %P%) 
set statusline=%<%f
set statusline+=%w%h%m%r
set statusline+=\ [%{&ff}/%Y]
set statusline+=\ [%{getcwd()}]
set statusline+=%=%-14.(%l,%c%V%)\ %p%%

" Sets what is saved when you save a session
set sessionoptions=blank,buffers,curdir,folds,help,resize,tabpages,winsize

" Invisible characters 
set listchars=trail:.,tab:>-,eol:$
set listchars+=tab:›\ ,trail:•,extends:#,nbsp:. " Highlight problematic whitespace
set nolist

set backspace=indent,eol,start
set matchpairs+=<:>
set nofoldenable " Turn off folding 

" Make cursor move by visual lines instead of file lines (when wrapping)
map <up> gk
map k gk
imap <up> <C-o>gk
map <down> gj
map j gj
imap <down> <C-o>gj
map E ge

" Map 'enter' to open the current file under cursor
map <CR> gf  

" Omni Completion 
autocmd FileType html   set omnifunc=htmlcomplete#CompleteTags
autocmd FileType xml    set omnifunc=xmlcomplete#CompleteTags

" Tagbar 
:noremap <Leader>t :TagbarToggle<CR>

" NERDTree 
:noremap <Leader>n :NERDTreeToggle<CR>

let g:NERDShutUp=1
let b:match_ignorecase = 1

" fuzzyfinder 
map <Leader>b :FufFile<CR>
let g:fuzzy_ignore = '.o;.obj;.bak;.exe;.pyc;.pyo;.DS_Store;.db'

" complete option
let g:AutoComplPop_IgnoreCaseOption = 0
let g:AutoComplPop_BehaviorKeywordLength = 2

" automatically give executable permissions if filename is *.sh
au BufWritePost *.sh :!chmod a+x <afile>

" automatically insert "#!/bin/sh" line for *.sh files
au BufEnter *.sh if getline(1) == "" | :call setline(1, "#!/bin/sh")

" Neocomplcache
let g:neocomplcache_enable_at_startup = 1

" Minibuffer
noremap <leader>e <esc>:1,300 bd!<cr>:q!<cr>
noremap <leader>b <esc>:BufExplorer<cr>
noremap <leader>q <esc>:q!<cr>
noremap <Leader>i :set list!<CR>
noremap <Leader>v :vsp^M^W^W<cr>
noremap <Leader>h ^W^W<cr>

" Moving next and previous result (erros/finds)
" map e :cp<CR>
map f :cn<CR>
" map <Leader>l :cl<CR>

noremap W :bn<cr>
noremap Q :bp<cr>
noremap D :bd!<cr>
noremap <C-f> <esc>:silent execute "grep! -R " . shellescape(expand("<cword>")) . " ."<cr>:copen<cr>
noremap E <esc><C-]><cr>

map <F2> :A<CR>
map <F12> :!ctags -R --sort=yes --c++-kinds=+p --fields=+iaS --extra=+q .<CR>
imap <c-space> <c-x><c-o>
cmap w!! %!sudo tee > /dev/null %

set viewoptions=folds,options,cursor,unix,slash
set virtualedit=onemore
set history=1000

" Allow buffer switching without saving
set hidden 

" Wrapped lines goes down/up to next row, rather than next line in file.
nnoremap j gj
nnoremap k gk

" Yank from the cursor to the end of the line, to be consistent with C and D.
nnoremap Y y$

" Switch Off The Current Search
nnoremap <silent> <Leader>/ :nohlsearch<CR>

" Reload vimrc file
nnoremap <silent> <LocalLeader>rs :source ~/.vimrc<CR>

" Compile
nmap <F9> :SCCompile<cr>
nmap <F10> :SCCompileRun<cr>

colorscheme wombat
set background=dark
"highlight Normal guibg=black guifg=white

if filereadable(expand("~/.vim/vimrc_cpp"))
  source ~/.vim/vimrc_cpp
endif

if filereadable(expand("~/.vim/vimrc_python"))
  source ~/.vim/vimrc_python
endif

if filereadable(expand("~/.vim/vimrc_local"))
  source ~/.vim/vimrc_local
endif

" Folding
set foldmethod=indent
set foldlevel=99
noremap t za
match Error /\%81v.\+/

